{"version":3,"sources":["components/AddCookie.jsx","components/Bonus.jsx","App.js","reportWebVitals.js","components/Navbar.jsx","index.js"],"names":["AddCookie","this","props","clicker","level","className","class","onClick","upgrade","id","Component","Bonus","App","clicked","setState","clicks","state","valeurClick","level1","levels","price","pc","prixLevel","Math","round","inflation","lvlPSec","pcPerSecond","masterInterval","setInterval","name","func","listCookieLevel","map","React","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57c21901.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass AddCookie extends Component{\n    \n    render(){\n        return(        \n            <div>\n              {this.props.clicker >= this.props.level ?\n                <div>\n                    <div className={this.props.class} onClick={()=>this.props.upgrade(this.props.id)}></div>\n                    <div className=\"price\">{this.props.level} cookies </div>\n                </div>\n                    :\n                    <p></p>\n                }\n            </div>\n\n        )\n        \n    }\n}\n\nexport default AddCookie","import React, {Component} from 'react'\n\nclass Bonus extends Component {\n    render() {\n        return(\n            <div className=\"bonus\">\n                {this.props.clicker >= 2000 ?\n                <div className=\"bonusImg\">2000 Cookies</div>\n                :\n                <p></p>\n                }\n                {this.props.clicker >= 10000 ?\n                <div className=\"bonusImg2\"> 10000 cookies </div>\n            :\n            <p></p>\n            }\n            </div>\n        )\n    }\n}\n\nexport default Bonus","import React from 'react'\nimport './App.css';\nimport AddCookie from './components/AddCookie'\nimport Bonus from './components/Bonus'\n\n\nexport class App extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = { \n    levels :\n    [\n        {id: 0, name:\"level1\", price:10, func:this.level1, class:\"level level1\", pc:2},\n        {id: 1, name:\"level2\", price:20, func:this.level1, class:\"level level2\", pc:15},\n        {id: 2, name:\"level3\", price:500, func:this.lvlPSec, class:\"level level3\", pc:20}\n    ],\n            valeurClick: 1,\n            clicks: 0,\n            pcPerSecond: 0,\n            inflation: 1.15,\n        };\n    }\n\n    clicked = () => {\n        this.setState({\n            clicks: this.state.clicks + this.state.valeurClick\n        })\n    }\n\n    level1 = (id) => {\n        this.setState({\n            clicks: this.state.clicks -= this.state.levels[id].price,\n            valeurClick: this.state.valeurClick += this.state.levels[id].pc,\n            prixLevel: this.state.levels[id].price = Math.round(this.state.levels[id].price * this.state.inflation)\n        })\n    }\n    \n    lvlPSec = (id) => {\n        this.setState({\n            clicks: this.state.clicks -= this.state.levels[id].price,\n            pcPerSecond: this.state.pcPerSecond += this.state.levels[id].pc,\n            prixLevel: this.state.levels[id].price = Math.round(this.state.levels[id].price * this.state.inflation)\n        })\n    }\n\n       masterInterval = setInterval(() => {\n          this.setState((state) =>{\n              return {\n                  clicks: this.state.clicks += this.state.pcPerSecond\n              }\n          }) \n       },1000)\n\n       \n    \n\n    render(){\n\n        const listCookieLevel = this.state.levels.map((level)=>(\n            <AddCookie \n                id={level.id}\n                key={level.id}\n                upgrade={level.func} \n                clicker={this.state.clicks}\n                level={level.price}\n                class={level.class}\n            />\n        ))\n        return (\n            <div className=\"main\">\n            <div className=\"display\">\n                <div className=\"shop shopTitle\">SHOP\n                <div className=\"box\">\n                    <div className=\"small-container\">\n                    {listCookieLevel}\n                    </div>\n                </div>\n\n                </div>\n                <div className=\"container-middle\">\n                    \n                <div className=\"totalCookie\">\n                    <button onClick={this.clicked} className=\"cookie\"><strong>Click on me!</strong></button>\n                </div>\n                </div>\n                    <div className=\"displayCookie\"><div className=\"number\">Number of cookies {this.state.clicks} </div></div>\n                    <Bonus clicker={this.state.clicks} />\n                </div>\n                </div>\n        )\n    }\n        \n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\n\nexport const Navbar = () => (\n    \n        <nav className=\"navbar\">\n            \n                <p>Cookies Clicker Game</p>\n                \n            \n        </nav>\n    \n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Navbar } from './components/Navbar'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Navbar />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}